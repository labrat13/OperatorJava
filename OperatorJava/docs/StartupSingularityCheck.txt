Проверка единственности запущенного Оператор.

Поскольку БД одна, и лог тоже один, то решено обеспечить работу только одной копии Оператор в любой момент времени.
Я не нашел примера кода для Java, как найти и развернуть окно ранее запущенного экземпляра приложения Оператор, чтобы переключить на него пользователя.

Для детектирования применяется файл блокировки lockfile.lock, создаваемый на время сеанса Оператор в его основном каталоге .Оператор .
Если этот файл остался после прекращения работы Оператор, то, следовательно, работа Оператор была завершена аварийно и данные могут быть повреждены.
Хотя сейчас это предусматривается архитектурой Оператор, но я мог что-либо упустить в этом.

Код детектирования реализован в классе OperatorJava.Utility.SingleAppInstance. Он там описан достаточно для понимания.

Поскольку при кликах по ярлыкам пользователь может запустить две-три-пять копий Оператор с разницей в 20 миллисекунд, а Линукс очень медленная система,
то все эти копии могут успеть одновременно пройти проверки и блокировки, что может стать причиной повреждения данных и замешательства пользователя.
Для предупреждения этого, каждый экземпляр перед блокировкой получает случайную паузу от 50 до 7000 миллисекунд, это увеличивает разброс времени и снижает вероятность неправильной блокировки.

 
